{"version":3,"sources":["app.js","default.js","environment.js","main.js","resources/index.js","shared/footerView.js","shared/headerView.js","monsters/services/api.js"],"names":["App","configureRouter","config","router","title","map","route","name","moduleId","nav","Default","api","test","activate","getMonsters","adventure","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","FooterView","footer","HeaderView","header","Api","httpClient","withHeader","queryParams","get","console","log","JSON","parse","response"],"mappings":";;;;;;;;;;;;;MAAaA,cAAAA;;;;;kBACXC,2CAAgBC,QAAQC,QAAO;AAC7B,WAAKA,MAAL,GAAcA,MAAd;AACAD,aAAOE,KAAP,GAAe,SAAf;AACAF,aAAOG,GAAP,CAAW,CACT,EAAEC,OAAO,EAAT,EAAaC,MAAM,SAAnB,EAA8BC,UAAU,SAAxC,EAAmDC,KAAK,KAAxD,EAA+DL,OAAO,SAAtE,EADS,CAAX;AAGD;;;;;;;;;;;;;;;;;;;;;QCHUM,kBAAAA,kBADZ;AAEG,yBAAYC,GAAZ,EAAiB;AAAA;;AACb,iBAAKA,GAAL,GAAWA,GAAX;AACA,iBAAKC,IAAL,GAAY,OAAZ;AACH;;0BAEDC,+BAAW;AACP,iBAAKF,GAAL,CAASG,WAAT,CAAqB,EAAEC,WAAW,0BAAb,EAArB;AACH;;;;;;;;;;;oBCZU;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCSCC,YAAAA;;;;;;;;;;AANhBC,UAAQjB,MAAR,CAAe;AACbkB,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASH,SAAT,CAAmBI,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYT,KAAhB,EAAuB;AACrBM,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYT,OAAhB,EAAyB;AACvBK,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCvBeZ,YAAAA;AAAT,WAASA,SAAT,CAAmBhB,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;QCFY6B,qBAAAA,aACT,sBAAc;AAAA;;AACV,aAAKC,MAAL,GAAc,cAAd;AACH;;;;;;;;;;;;;;;QCHQC,qBAAAA,aACT,sBAAc;AAAA;;AACV,aAAKC,MAAL,GAAc,cAAd;AACH;;;;;;;;;;;;;;;;;;QCEQC,cAAAA,cADZ;AAEG,qBAAYC,UAAZ,EAAwB;AAAA;;AACpB,iBAAKA,UAAL,GAAkBA,UAAlB;AACA,iBAAKA,UAAL,CAAgBlB,SAAhB,CAA0B,kBAAU;AAChChB,uBAAOmC,UAAP,CAAkB,cAAlB,EAAkC,kBAAlC;AACH,aAFD;AAGH;;sBAEDvB,mCAAYwB,aAAa;AACrB,gBAAI,CAACA,WAAL,EAAkB;AACdA,4BAAYvB,SAAZ,GAAwB,0BAAxB;AACH;AACD,iBAAKqB,UAAL,CAAgBG,GAAhB,CAAoB,qBAAqBD,YAAYvB,SAAjC,GAA6C,OAAjE,EACKc,IADL,CACU,oBAAY;AACdW,wBAAQC,GAAR,CAAYC,KAAKC,KAAL,CAAWC,QAAX,CAAZ;AACA,uBAAOF,KAAKC,KAAL,CAAWC,QAAX,CAAP;AACH,aAJL;AAKH","file":"app-bundle.js","sourcesContent":["export class App {\r\n  configureRouter(config, router){\r\n    this.router = router;\r\n    config.title = 'Aurelia';\r\n    config.map([\r\n      { route: '', name: 'default', moduleId: 'default', nav: false, title: 'Default' }\r\n    ]);\r\n  }\r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { Api } from './monsters/services/api';\r\n\r\n@inject(Api)\r\nexport class Default {\r\n    constructor(api) {\r\n        this.api = api;\r\n        this.test = 'TEST!';\r\n    }\r\n\r\n    activate() {\r\n        this.api.getMonsters({ adventure: 'Prince_of_the_Apoclaypse' });\r\n    }\r\n}","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\n\r\n//Configure Bluebird Promises.\r\nPromise.config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n","export class FooterView {\r\n    constructor() {\r\n        this.footer = 'FOOTER HERE!';\r\n    }\r\n}","export class HeaderView {\r\n    constructor() {\r\n        this.header = 'HEADER HERE!';\r\n    }\r\n}","import { inject, noView } from 'aurelia-framework';\r\nimport { HttpClient } from 'aurelia-http-client';\r\n\r\n@noView\r\n@inject(HttpClient)\r\nexport class Api {\r\n    constructor(httpClient) {\r\n        this.httpClient = httpClient;\r\n        this.httpClient.configure(config => {\r\n            config.withHeader('Content-Type', 'application/json');\r\n        });\r\n    }\r\n\r\n    getMonsters(queryParams) {\r\n        if (!queryParams) {\r\n            queryParams.adventure = 'Prince_of_the_Apoclaypse';\r\n        }\r\n        this.httpClient.get('/resources/json/' + queryParams.adventure + '.json')\r\n            .then(response => {\r\n                console.log(JSON.parse(response));\r\n                return JSON.parse(response);\r\n            });\r\n    }\r\n}"],"sourceRoot":"../src"}